{
	"info": {
		"_postman_id": "0031f6e4-69f5-4f5a-b267-90f603a301af",
		"name": "podcast API",
		"description": "# Podcast Platform API\n\nA Laravel-based backend API for a podcast platform.\n\n## Features\n\n- RESTful API endpoints\n    \n- Authentication with Sanctum\n    \n- Pagination, sorting, and filtering\n    \n- Proper relationships between models\n    \n- Dockerized environment with Apache and phpMyAdmin\n    \n\n## Requirements\n\n- Docker\n    \n- Docker Compose\n    \n\n## Installation\n\n1. Clone the repository\n    \n2. Copy `.env.example` to `.env` and update database credentials\n    \n3. Run `docker-compose up -d`\n    \n4. Access the application at `http://localhost`\n    \n5. Access phpMyAdmin at `http://localhost:8080`\n    \n\n## API Documentation\n\nImport the Postman collection from `docs/PodcastAPI.postman_collection.json`\n\n## Database\n\nThe database will be automatically created when you run the containers. You can access it via phpMyAdmin.\n\n## Testing\n\nTo run the tests:\n\n``` bash\ndocker-compose exec app php artisan test\n\n ```",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "20025358"
	},
	"item": [
		{
			"name": "register",
			"request": {
				"method": "GET",
				"header": [],
				"description": "StartFragment\n\n### Register User\n\n**Endpoint**: `POST /api/register`\n\n**Description**: Register a new user\n\n**Request Parameters**:\n\nEndFragment\n\n{  \n\"name\": \"John Doe\",  \n\"email\": \"[john@example.com](https://mailto:john@example.com)\",  \n\"password\": \"password123\",  \n\"password_confirmation\": \"password123\"  \n}\n\n**Response (Success - 201 Created)**EndFragment  \n{  \n\"message\": \"User registered successfully\",  \n\"user\": {  \n\"name\": \"John Doe\",  \n\"email\": \"[john@example.com](https://mailto:john@example.com)\",  \n\"updated_at\": \"2023-08-15T12:00:00.000000Z\",  \n\"created_at\": \"2023-08-15T12:00:00.000000Z\",  \n\"id\": 1  \n}  \n}"
			},
			"response": []
		},
		{
			"name": "login",
			"request": {
				"method": "GET",
				"header": [],
				"description": "StartFragment\n\n**Endpoint**: `POST /api/login`\n\n**Description**: Authenticate user and return token\n\n**Request Parameters**:  \n{  \n\"email\": \"[john@example.com](https://mailto:john@example.com)\",  \n\"password\": \"password123\"  \n}\n\nEndFragment"
			},
			"response": []
		},
		{
			"name": "logout",
			"request": {
				"method": "GET",
				"header": [],
				"description": "StartFragment\n\n**Endpoint**: `POST /api/logout`\n\n**Description**: Revoke current access token\n\n**Headers**:  \nAuthorization: Bearer {token}\n\nEndFragment"
			},
			"response": []
		},
		{
			"name": "all categories",
			"request": {
				"method": "GET",
				"header": [],
				"description": "StartFragment\n\n**Endpoint**: `GET /api/categories`\n\n**Description**: Get all podcast categories\n\nStartFragment\n\n**Query Parameters**:\n\n- None\n    \n\nEndFragment\n\nEndFragment"
			},
			"response": []
		},
		{
			"name": "Get Podcasts by Category",
			"request": {
				"method": "GET",
				"header": [],
				"description": "StartFragment\n\n**Endpoint**: `GET /api/categories/{id}/podcasts`\n\n**Description**: Get all podcasts for a specific category\n\n**URL Parameters**:\n\n- `id` (required): Category ID\n    \n\n**Query Parameters**:\n\n- `page` (optional): Page number for pagination (default: 1)\n    \n- `per_page` (optional): Items per page (default: 10)\n    \n\nEndFragment"
			},
			"response": []
		},
		{
			"name": "List All Podcasts",
			"request": {
				"method": "GET",
				"header": [],
				"description": "StartFragment\n\n**Endpoint**: `GET /api/podcasts`\n\n**Description**: Get all podcasts with pagination, sorting, and filtering\n\n**Query Parameters**:\n\n- `page` (optional): Page number (default: 1)\n    \n- `per_page` (optional): Items per page (default: 10)\n    \n- `category` (optional): Filter by category ID\n    \n- `sort` (optional): Field to sort by (title, created_at)\n    \n- `direction` (optional): Sort direction (asc, desc)\n    \n\nEndFragment"
			},
			"response": []
		},
		{
			"name": "Get Featured Podcasts",
			"request": {
				"method": "GET",
				"header": [],
				"description": "StartFragment\n\n**Endpoint**: `GET /api/podcasts/featured`\n\n**Description**: Get all featured podcasts\n\n**Query Parameters**:\n\n- None\n    \n\nEndFragment"
			},
			"response": []
		},
		{
			"name": "Get Podcast Details",
			"request": {
				"method": "GET",
				"header": [],
				"description": "StartFragment\n\n**Endpoint**: `GET /api/podcasts/{id}`\n\n**Description**: Get details for a specific podcast\n\n**URL Parameters**:\n\n- `id` (required): Podcast ID or slug\n    \n\nEndFragment"
			},
			"response": []
		},
		{
			"name": "Get Podcast Episodes",
			"request": {
				"method": "GET",
				"header": [],
				"description": "StartFragment\n\n**Endpoint**: `GET /api/podcasts/{id}/episodes`\n\n**Description**: Get all episodes for a specific podcast\n\n**URL Parameters**:\n\n- `id` (required): Podcast ID or slug\n    \n\n**Query Parameters**:\n\n- `page` (optional): Page number (default: 1)\n    \n- `per_page` (optional): Items per page (default: 10)\n    \n\nEndFragment"
			},
			"response": []
		},
		{
			"name": "Get Episode Details",
			"request": {
				"method": "GET",
				"header": [],
				"description": "StartFragment\n\n**Endpoint**: `GET /api/episodes/{id}`\n\n**Description**: Get details for a specific episode\n\n**URL Parameters**:\n\n- `id` (required): Episode ID\n    \n\nEndFragment"
			},
			"response": []
		}
	]
}